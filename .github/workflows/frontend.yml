name: Frontend Pipeline

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - '.github/workflows/frontend.yml'
      - 'frontend/**'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - '.github/workflows/frontend.yml'
      - 'frontend/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18
      IMAGE_NAME: frontend
      IMAGE_TAG: ${{ github.sha }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
      CONTAINER_APP: ${{ vars.FRONTEND_CONTAINER_APP }}
      SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Build frontend Docker image
        run: docker build --file frontend/Dockerfile --tag "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" frontend

      - name: Log in to Azure Container Registry
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: echo "${ACR_PASSWORD}" | docker login "${ACR_LOGIN_SERVER}" -u "${ACR_USERNAME}" --password-stdin

      - name: Tag frontend image for registry
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          REGISTRY_IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}"
          docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY_IMAGE}:${IMAGE_TAG}"
          docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY_IMAGE}:latest"

      - name: Push frontend image
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          REGISTRY_IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}"
          docker push "${REGISTRY_IMAGE}:${IMAGE_TAG}"
          docker push "${REGISTRY_IMAGE}:latest"

      - name: Azure login
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && env.AZURE_CREDENTIALS != ''
        uses: azure/login@v2
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Select subscription
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && env.SUBSCRIPTION_ID != ''
        run: az account set --subscription "${SUBSCRIPTION_ID}"

      - name: Update frontend Azure Container App image
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && env.CONTAINER_APP != '' && env.RESOURCE_GROUP != ''
        run: |
          REGISTRY_IMAGE="${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${IMAGE_TAG}"
          az containerapp update \
            --name "${CONTAINER_APP}" \
            --resource-group "${RESOURCE_GROUP}" \
            --image "${REGISTRY_IMAGE}"

      - name: Show frontend revisions
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && env.CONTAINER_APP != '' && env.RESOURCE_GROUP != ''
        run: |
          az containerapp revision list \
            --name "${CONTAINER_APP}" \
            --resource-group "${RESOURCE_GROUP}" \
            --output table
